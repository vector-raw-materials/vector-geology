
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/examples/collinstown_OMF_to_subsurface.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_examples_collinstown_OMF_to_subsurface.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_examples_collinstown_OMF_to_subsurface.py:


Reading COLLINSTOWN OMF project
================================

This tutorial demonstrates how to read an OMF project file in COLLINSTOWN.

.. GENERATED FROM PYTHON SOURCE LINES 10-14

Required Libraries:
~~~~~~~~~~~~~~~~~~~

Import the required libraries. 

.. GENERATED FROM PYTHON SOURCE LINES 14-24

.. code-block:: default


    import omfvista
    import pandas as pd
    import pyvista
    import subsurface
    from subsurface import TriSurf, LineSet
    from subsurface.visualization import to_pyvista_mesh, pv_plot, to_pyvista_line, init_plotter
    from subsurface.writer import base_structs_to_binary_file
    from dotenv import dotenv_values





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/subsurface/subsurface/reader/__init__.py:14: UserWarning: Welly or Striplog not installed. No well reader possible.
      warnings.warn("Welly or Striplog not installed. No well reader possible.")




.. GENERATED FROM PYTHON SOURCE LINES 25-29

Load OMF Project:
~~~~~~~~~~~~~~~~~

Load the OMF project using a fixture.

.. GENERATED FROM PYTHON SOURCE LINES 29-38

.. code-block:: default


    def load_omf():
        config = dotenv_values()
        path = config.get('PATH_TO_COLLINSTOWN')
        omf = omfvista.load_project(path)
        return omf

    omf = load_omf()








.. GENERATED FROM PYTHON SOURCE LINES 39-43

Read OMF with PyVista:
~~~~~~~~~~~~~~~~~~~~~~

Visualize the OMF project with PyVista.

.. GENERATED FROM PYTHON SOURCE LINES 43-47

.. code-block:: default


    if False:
        omf.plot(multi_colors=True, show_edges=True, notebook=False)








.. GENERATED FROM PYTHON SOURCE LINES 48-52

Convert OMF to Unstructured Single Block:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Convert the loaded OMF project into an unstructured single block for further analysis.

.. GENERATED FROM PYTHON SOURCE LINES 52-103

.. code-block:: default


    meshes = []
    lines = []
    for e in range(omf.n_blocks):

        block_name = omf.get_block_name(e)
        polydata_obj: pyvista.PolyData = omf[block_name]
        # Check if the polydata is a mesh and if is not continue
        print(polydata_obj.cell_type(0))
        unstruct_pyvista: pyvista.UnstructuredGrid = polydata_obj.cast_to_unstructured_grid()

        grid = unstruct_pyvista 
        cell_data = {name: grid.cell_data[name] for name in grid.cell_data}
        match polydata_obj.cell_type(0):
            case pyvista.CellType.TRIANGLE:
                if False: continue # TODO: Remove this
            
                cells_pyvista = unstruct_pyvista.cells.reshape(-1, 4)[:, 1:]
                new_cell_data = {
                    **{
                        "Formation_Major_": e,
                    },
                    **cell_data
                }
                unstruct: subsurface.UnstructuredData = subsurface.UnstructuredData.from_array(
                    vertex=unstruct_pyvista.points,
                    cells=cells_pyvista,
                    cells_attr=pd.DataFrame(new_cell_data)
                )
            
                ts = TriSurf(mesh=unstruct)
                s = to_pyvista_mesh(ts)
                meshes.append(s)

           
            case pyvista.CellType.LINE:
                if "Formation_Major" not in cell_data.keys(): continue
                cells_pyvista = unstruct_pyvista.cells.reshape(-1, 3)[:, 1:]
                unstruct: subsurface.UnstructuredData = subsurface.UnstructuredData.from_array(
                    vertex=unstruct_pyvista.points,
                    cells=cells_pyvista,
                    cells_attr=pd.DataFrame(cell_data)
                )
                line = LineSet(data=unstruct)
                s = to_pyvista_line(line, radius=100, as_tube=True, spline=False)
            
                lines.append(s)

    if False:  # Replace with condition for exporting to Liquid Earth
        base_structs_to_binary_file("leapfrog1", unstruct)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.TRIANGLE
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.LINE
    CellType.TRIANGLE
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.TRIANGLE
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.TRIANGLE
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.LINE
    CellType.TRIANGLE
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.VERTEX
    CellType.TRIANGLE
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    CellType.LINE




.. GENERATED FROM PYTHON SOURCE LINES 104-107

Visualize Unstructured Data:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Use Subsurface and PyVista to visualize the unstructured data.

.. GENERATED FROM PYTHON SOURCE LINES 107-119

.. code-block:: default


    plotter = init_plotter()
    for mesh in meshes[3:]:
        plotter.add_mesh(mesh, cmap="magma", opacity=0.7)

    for line in lines:
        plotter.add_mesh(line, cmap="viridis", opacity=1)

    plotter.show()






.. image-sg:: /examples/examples/images/sphx_glr_collinstown_OMF_to_subsurface_001.png
   :alt: collinstown OMF to subsurface
   :srcset: /examples/examples/images/sphx_glr_collinstown_OMF_to_subsurface_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.540 seconds)


.. _sphx_glr_download_examples_examples_collinstown_OMF_to_subsurface.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: collinstown_OMF_to_subsurface.py <collinstown_OMF_to_subsurface.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: collinstown_OMF_to_subsurface.ipynb <collinstown_OMF_to_subsurface.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
