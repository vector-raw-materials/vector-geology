
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01_readers/03_model_2_OMF_to_subsurface.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_01_readers_03_model_2_OMF_to_subsurface.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01_readers_03_model_2_OMF_to_subsurface.py:


Reading OMF project and exporting it to Subsurface: Example 1
==============================================================

This tutorial demonstrates how to read an OMF project file and export it for use with Subsurface.

.. GENERATED FROM PYTHON SOURCE LINES 10-14

Import Required Libraries
-------------------------

Import the necessary libraries for reading an OMF file and processing it.

.. GENERATED FROM PYTHON SOURCE LINES 14-23

.. code-block:: default


    import omfvista
    import pandas as pd
    import pyvista
    from dotenv import dotenv_values
    import subsurface
    from subsurface import TriSurf, LineSet
    from subsurface.visualization import to_pyvista_mesh, to_pyvista_line, init_plotter








.. GENERATED FROM PYTHON SOURCE LINES 24-28

Load OMF Project
----------------

Load the OMF project using a fixture.

.. GENERATED FROM PYTHON SOURCE LINES 28-37

.. code-block:: default


    def load_omf():
        config = dotenv_values()
        path = config.get('PATH_TO_MODEL_2')
        omf_project = omfvista.load_project(path)
        return omf_project

    omf_project = load_omf()








.. GENERATED FROM PYTHON SOURCE LINES 38-42

Visualize OMF Project with PyVista (Optional)
---------------------------------------------

Optionally, visualize the OMF project using PyVista. This step can be skipped or modified as needed.

.. GENERATED FROM PYTHON SOURCE LINES 42-46

.. code-block:: default


    if False:  # Change to True to enable visualization
        omf_project.plot(multi_colors=True, show_edges=True, notebook=False)








.. GENERATED FROM PYTHON SOURCE LINES 47-51

Convert OMF to Unstructured Single Block
----------------------------------------

Convert the loaded OMF project into an unstructured single block for further analysis.

.. GENERATED FROM PYTHON SOURCE LINES 51-95

.. code-block:: default


    meshes = []
    lines = []

    for block_index in range(omf_project.n_blocks):
        block_name = omf_project.get_block_name(block_index)
        polydata_obj: pyvista.PolyData = omf_project[block_name]

        # Skip if the polydata is not a mesh
        if not isinstance(polydata_obj, pyvista.PolyData):
            continue

        unstruct_pyvista: pyvista.UnstructuredGrid = polydata_obj.cast_to_unstructured_grid()
        cell_data = {name: unstruct_pyvista.cell_data[name] for name in unstruct_pyvista.cell_data}

        # Process based on cell type
        match polydata_obj.cell_type(0):
            case pyvista.CellType.TRIANGLE:
                # Process triangle mesh
                cells_pyvista = unstruct_pyvista.cells.reshape(-1, 4)[:, 1:]
                new_cell_data = {"Formation_Major_": block_index, **cell_data}
                unstruct = subsurface.UnstructuredData.from_array(
                    vertex=unstruct_pyvista.points,
                    cells=cells_pyvista,
                    cells_attr=pd.DataFrame(new_cell_data)
                )
                ts = TriSurf(mesh=unstruct)
                meshes.append(to_pyvista_mesh(ts))

            case pyvista.CellType.LINE:
                # Process line data
                if "Formation_Major" not in cell_data.keys():
                    continue
                cells_pyvista = unstruct_pyvista.cells.reshape(-1, 3)[:, 1:]
                unstruct = subsurface.UnstructuredData.from_array(
                    vertex=unstruct_pyvista.points,
                    cells=cells_pyvista,
                    cells_attr=pd.DataFrame(cell_data)
                )
                line = LineSet(data=unstruct)
                lines.append(to_pyvista_line(line, radius=100, as_tube=True, spline=False))

    # Export to desired format here if necessary





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(
    /home/leguark/.virtualenvs/gempy-geotop-pilot/lib/python3.10/site-packages/pyvista/core/dataset.py:2697: PyVistaDeprecationWarning: `cell_type` is deprecated. Use `get_cell(i).type` instead
      warnings.warn(




.. GENERATED FROM PYTHON SOURCE LINES 96-100

Visualize Unstructured Data
---------------------------

Visualize the unstructured data using Subsurface and PyVista.

.. GENERATED FROM PYTHON SOURCE LINES 100-111

.. code-block:: default


    plotter = init_plotter()

    for mesh in meshes:
        plotter.add_mesh(mesh, cmap="magma", opacity=0.7)

    for line in lines:
        plotter.add_mesh(line, cmap="viridis", opacity=1)

    plotter.show()




.. image-sg:: /examples/01_readers/images/sphx_glr_03_model_2_OMF_to_subsurface_001.png
   :alt: 03 model 2 OMF to subsurface
   :srcset: /examples/01_readers/images/sphx_glr_03_model_2_OMF_to_subsurface_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.332 seconds)


.. _sphx_glr_download_examples_01_readers_03_model_2_OMF_to_subsurface.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 03_model_2_OMF_to_subsurface.py <03_model_2_OMF_to_subsurface.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 03_model_2_OMF_to_subsurface.ipynb <03_model_2_OMF_to_subsurface.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
